# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - tcazr-test-webapp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit

      - name: Run unit tests
        run: PYTHONPATH=$PYTHONPATH:$(pwd) pytest --junitxml=results.xml

      - name: Register test results in ServiceNow DCV
        uses: ServiceNow/servicenow-devops-test-report@v6.0.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          xml-report-filename: results.xml
          test-summary-name: 'Unit Test Summary'

      - name: Run Bandit SAST
        run: |
          python -m bandit -r . -f xml -o bandit-results.xml --severity-level high --confidence-level high || true

      - name: Register security results in ServiceNow DCV
        uses: ServiceNow/servicenow-devops-security-result@v3.1.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          security-result-attributes: |
            {
              "scanner": "Bandit",
              "applicationName": "DCV Approvals Dashboard",
              "buildVersion": "${{ github.run_number }}",
              "fileName": "bandit-results.xml",
              "format": "bandit"
            }

  build:
    name: build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Package application
        run: zip -r python-app.zip app.py templates requirements.txt

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: python-app.zip

      - name: Register build artifact in ServiceNow DCV
        uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'build'
          artifacts: |
            [{
              "name": "python-app",
              "version": "1.${{ github.run_number }}",
              "semanticVersion": "1.${{ github.run_number }}.0",
              "repositoryName": "${{ github.repository }}"
            }]

  change:
    needs: build
    runs-on: ubuntu-latest
    #environment: prod
    name: change
    steps:
      - name: Heartbeat - let DCV register this job
        run: |
          echo "Starting change step..."
          sleep 5
      - name: Register deployment gate
        uses: ServiceNow/servicenow-devops-change@v6.1.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: "change"
          deployment-gate: >-
            {
              "environment": "prod",
              "jobName": "deploy"
            }

  deploy:
    needs: change
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZUREAPPSERVICE_TENANTID_5909E22C6034485D950022D0F2447A5F }}
      SERVICE_NOW_API: ${{ secrets.SERVICE_NOW_API }}
      FLASK_SECRET: ${{ secrets.FLASK_SECRET }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5909E22C6034485D950022D0F2447A5F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_51A493B9A49A4035A19E7838BA54461C }}
      - name: Set App Service settings
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp config appsettings set \
              --resource-group TCAZR-UKSOUTH-WEBHOSTING-RSG \
              --name tcazr-test-webapp \
              --settings \
                AZURE_CLIENT_ID=${{ secrets.AZURE_OIDC_CLIENT_ID }} \
                AZURE_TENANT_ID=${{ secrets.AZUREAPPSERVICE_TENANTID_5909E22C6034485D950022D0F2447A5F }} \
                FLASK_SECRET=${{ secrets.FLASK_SECRET }} \
                SERVICE_NOW_API=${{ secrets.SERVICE_NOW_API }}
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'tcazr-test-webapp'
          slot-name: 'Production'