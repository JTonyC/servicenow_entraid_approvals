# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - tcazr-test-webapp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 1️ Register the pipeline in ServiceNow
  register-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Register pipeline in ServiceNow
        uses: ServiceNow/servicenow-devops-register-pipeline@v1.38.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          pipeline-name: "Approvals Dashboard Pipeline"

  # 2️ Build job
  build:
    needs: register-pipeline
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: run tests here

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/

      # 3️ Register the build artifact in ServiceNow
      - name: Register build artifact in ServiceNow
        uses: ServiceNow/servicenow-devops-register-artifact@v1.38.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          artifact-name: "python-app"
          artifact-type: "zip"
          repository-name: ${{ github.repository }}
          branch-name: ${{ github.ref_name }}
          commit-id: ${{ github.sha }}

  # 4️ Deployment gate (Change creation + approval)
  ServiceNowDevOpsChange:
    needs: build
    runs-on: ubuntu-latest
    name: ServiceNow DevOps Change (Deployment Gate)
    steps:
      - name: Register deployment gate
        uses: ServiceNow/servicenow-devops-change@v6.1.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: ServiceNow DevOps Change
          deployment-gate: >-
            {
              "environment": "prod",
              "jobName": "deploy"
              /* 
              , "attributes": {
                  "short_description": "Override short description here",
                  "description": "Override long description here",
                  "assignment_group": "<sys_id of assignment group>",
                  "priority": "3",
                  "implementation_plan": "Override implementation plan here",
                  "backout_plan": "Override backout plan here",
                  "test_plan": "Override test plan here",
                  "category": "Software",
                  "risk": "Low",
                  "impact": "Low",
                  "cmdb_ci": "<sys_id of Application Service CI>",
                  "u_environment": "prod"
              }
              */
            }

  # 5️ Deploy job
  deploy:
    needs: ServiceNowDevOpsChange
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
      contents: read
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZUREAPPSERVICE_TENANTID_5909E22C6034485D950022D0F2447A5F }}
      SERVICE_NOW_API: ${{ secrets.SERVICE_NOW_API }}
      FLASK_SECRET: ${{ secrets.FLASK_SECRET }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5909E22C6034485D950022D0F2447A5F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_51A493B9A49A4035A19E7838BA54461C }}

      - name: Set App Service settings
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp config appsettings set \
              --resource-group TCAZR-UKSOUTH-WEBHOSTING-RSG \
              --name tcazr-test-webapp \
              --settings \
                AZURE_CLIENT_ID=${{ secrets.AZURE_OIDC_CLIENT_ID }} \
                AZURE_TENANT_ID=${{ secrets.AZUREAPPSERVICE_TENANTID_5909E22C6034485D950022D0F2447A5F }} \
                FLASK_SECRET=${{ secrets.FLASK_SECRET }} \
                SERVICE_NOW_API=${{ secrets.SERVICE_NOW_API }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'tcazr-test-webapp'
          slot-name: 'Production'

  # 6️ Close the change after successful deploy
  close-change:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Close change in ServiceNow
        uses: ServiceNow/servicenow-devops-close-change@v1.38.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: Close Change